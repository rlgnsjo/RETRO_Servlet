<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.retro.mybatis.SHSMapper.xml">
     <select id="bestList" resultType="com.retro.dto.ProductDTO">
     <![CDATA[
     	SELECT *
		FROM (SELECT * FROM tbl_product 
     	      ORDER BY p_good DESC)
 	    WHERE rownum <= 4
 	  ]]>   
     </select>
     
      <select id="newList" resultType="com.retro.dto.ProductDTO">
     <![CDATA[
     	SELECT *
		FROM (SELECT * FROM tbl_product 
        ORDER BY p_indate DESC)
 	    WHERE rownum <= 4
 	  ]]>   
     </select>
     <!--21. 매개변수로 전달받은 id값을 sql문에 바인딩변수로 넣고 sql문 실행 (DB로 이동) -->
      <select id="idCheck" parameterType="String" resultType="String">    
     	SELECT id FROM tbl_member
     	WHERE id = #{id}			  
     </select>
     <insert id="mem_insert" parameterType="com.retro.dto.MemberDTO" >
     INSERT INTO tbl_member(id, pw, name, phone, email, zipcode, addr1, addr2)
	 VALUES(#{id}, #{pw}, #{name}, #{phone}, #{email}, #{zipcode}, #{addr1}, #{addr2}) 
     </insert>
     <select id="loginCheck" parameterType="com.retro.dto.MemberDTO" resultType="com.retro.dto.MemberDTO">
     SELECT * FROM tbl_member
	 WHERE id= #{id} AND pw =#{pw}     
     </select>
     <update id="memUpdate" parameterType="com.retro.dto.MemberDTO">
     	UPDATE tbl_member SET
     	name = #{name},
     	phone = #{phone},
     	email = #{email},
     	zipcode = #{zipcode},
     	addr1 = #{addr1},
     	addr2 = #{addr2}
     WHERE id = #{id}	
     
     </update>
     <select id="memOne" parameterType="String" resultType="com.retro.dto.MemberDTO">
     	 SELECT * FROM tbl_member
		 WHERE id= #{id} 
     
     </select>
     <select id="pwCheck" resultType="int">
     	 SELECT COUNT(*) FROM tbl_member
		 WHERE id= #{id} AND pw =#{pw} 
     </select>
     <update id="pwUpdate" parameterType="hashmap">
    	 UPDATE tbl_member SET
    	 pw =#{pw}
    	 WHERE id= #{id} 
   	 
     </update>
     <delete id="memDelete" parameterType="String">
     	 DELETE FROM tbl_member
     	 WHERE id= #{id}    	    
     </delete>

	<!--게시판 sql문 작성 시작!  -->
	<select id="totalCount" resultType="int">
	 SELECT COUNT(BNO)
	 FROM tbl_board 
	 WHERE bno > 0
       <if test="search_option == 1">
       AND title LIKE '%' ||#{keyword} ||'%' OR content LIKE '%'||#{keyword} ||'%' 
       </if>
       <if test="search_option == 2">
     	AND title LIKE '%' ||#{keyword} ||'%'
       </if>
       <if test="search_option == 3">
     	AND content LIKE '%' ||#{keyword} ||'%'
       </if>
       <if test="search_option == 4">
      	AND	writer LIKE '%' ||#{keyword} ||'%'
       </if>	
	</select>
	
	
<!-- 	현재 이값에서는 cridto에 담겨져 있는 매개변수가 담겨있음. preparedstament 방식임 -->
	<!-- 동적쿼리 이용을 위해서 sql문안에 if문을 작성한다. -->
	<select id="listAll" resultType="com.retro.dto.BoardDTO" >
		 SELECT * 
		 FROM (SELECT rownum rnum, a.*
		      FROM (select * 
		      from tbl_board		      
		      WHERE bno >0 
		       <if test="search_option == 1">
		       AND title LIKE '%' ||#{keyword} ||'%' OR content LIKE '%'||#{keyword} ||'%' 
		       </if>
		       <if test="search_option == 2">
		     	AND title LIKE '%' ||#{keyword} ||'%'
		       </if>
		       <if test="search_option == 3">
		     	AND content LIKE '%' ||#{keyword} ||'%'
		       </if>
		       <if test="search_option == 4">
		      	AND	writer LIKE '%' ||#{keyword} ||'%'
		       </if>
		       	      				      		
		      <if test="sort_type == 'new'">
		      	ORDER BY bno DESC
		      </if>
		      <if test="sort_type == 'good'">
		      	ORDER BY goodcnt DESC, bno DESC
		      </if>	
		      <if test="sort_type == 'reply'">
		      	ORDER BY replycnt DESC, bno DESC
		      </if>
		      <if test="sort_type == 'view'">
		      	ORDER BY viewcnt DESC, bno DESC
		      </if>		     	      		    
		      ) a
		    )
		WHERE rnum BETWEEN #{pageStart} AND #{perPageNum}   <!--pagestart는 getpageStart에 담기고 perPageNum은 getperPageNum에 담음.  -->
	</select>
	
	<!-- 최신순 new  -->
	

</mapper>